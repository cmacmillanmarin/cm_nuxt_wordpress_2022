//
// Add custom and general css as grids, typographies, mixins, etc (css vars on App.vue)

@import './reset';
@import './mixins';
@import './grid';
@import './typography';

html {
  font-family: Verdana, Geneva, Tahoma, sans-serif;
  font-size: 10px;
}

.display {
  &--flex {
    display: flex;
  }
  &--inline-block {
    display: inline-block;
  }
}

.text-align {
  &--right {
    text-align: right;
  }
}

.border {
  &--none {
    border: none;
  }
}

:root {
  --v-intersect-duration: 500ms;
  --v-intersect-delay: 0ms;
  --v-intersect-easing: cubic-bezier(0.25, 0.46, 0.45, 0.94); /* Ease out quad */
  --v-intersect-distance: 100px;
  --v-intersect-distance-invert: -100px;
}

/*
   * FADING
   */

.fade-init,
.fadeIn-init,
.fadeUp-init,
.fadeDown-init,
.fadeRight-init,
.fadeLeft-init,
.fadeUpRight-init,
.fadeUpLeft-init,
.fadeDownRight-init,
.fadeDownLeft-init {
  opacity: 0;
  transition-property: opacity, transform;
  transition-duration: var(--v-intersect-duration);
  transition-delay: var(--v-intersect-delay);
  transition-timing-function: var(--v-intersect-easing);
}
.fadeUp-init {
  transform: translate3d(0, var(--v-intersect-distance), 0);
}
.fadeDown-init {
  transform: translate3d(0, var(--v-intersect-distance-invert), 0);
}
.fadeRight-init {
  transform: translate3d(var(--v-intersect-distance-invert), 0, 0);
}
.fadeLeft-init {
  transform: translate3d(var(--v-intersect-distance), 0, 0);
}
.fadeUpRight-init {
  transform: translate3d(var(--v-intersect-distance-invert), var(--v-intersect-distance), 0);
}
.fadeUpLeft-init {
  transform: translate3d(var(--v-intersect-distance), var(--v-intersect-distance), 0);
}
.fadeDownRight-init {
  transform: translate3d(var(--v-intersect-distance-invert), var(--v-intersect-distance-invert), 0);
}
.fadeDownLeft-init {
  transform: translate3d(var(--v-intersect-distance), var(--v-intersect-distance-invert), 0);
}

.fade,
.fadeIn,
.fadeUp,
.fadeDown,
.fadeRight,
.fadeLeft,
.fadeUpRight,
.fadeUpLeft,
.fadeDownRight,
.fadeDownLeft {
  opacity: 1;
  transform: none;
}

/*
   * ZOOMING
   */

.zoomIn-init,
.zoomInUp-init,
.zoomInDown-init,
.zoomInRight-init,
.zoomInLeft-init,
.zoomOut-init,
.zoomOutUp-init,
.zoomOutDown-init,
.zoomOutRight-init,
.zoomOutLeft-init {
  opacity: 0;
  transition-property: opacity, transform;
  transition-duration: var(--v-intersect-duration);
  transition-delay: var(--v-intersect-delay);
  transition-timing-function: var(--v-intersect-easing);
}
.zoomIn-init {
  transform: scale(0.6);
}
.zoomInUp-init {
  transform: translate3d(0, var(--v-intersect-distance), 0) scale(0.6);
}
.zoomInDown-init {
  transform: translate3d(0, var(--v-intersect-distance-inverted), 0) scale(0.6);
}
.zoomInRight-init {
  transform: translate3d(var(--v-intersect-distance-inverted), 0, 0) scale(0.6);
}
.zoomInLeft-init {
  transform: translate3d(var(--v-intersect-distance), 0, 0) scale(0.6);
}
.zoomOut-init {
  transform: scale(1.2);
}
.zoomOutUp-init {
  transform: translate3d(0, var(--v-intersect-distance), 0) scale(1.2);
}
.zoomOutDown-init {
  transform: translate3d(0, var(--v-intersect-distance-inverted), 0) scale(1.2);
}
.zoomOutRight-init {
  transform: translate3d(var(--v-intersect-distance-inverted), 0, 0) scale(1.2);
}
.zoomOutLeft-init {
  transform: translate3d(var(--v-intersect-distance), 0, 0) scale(1.2);
}

.zoomIn,
.zoomInUp,
.zoomInDown,
.zoomInRight,
.zoomInLeft,
.zoomOut,
.zoomOutUp,
.zoomOutDown,
.zoomOutRight,
.zoomOutLeft {
  opacity: 1;
  transform: none;
}

/*
   * SLIDING
   */

.slideUp-init,
.slideDown-init,
.slideRight-init,
.slideLeft-init {
  visibility: hidden;
  transition-property: transform;
  transition-duration: var(--v-intersect-duration);
  transition-delay: var(--v-intersect-delay);
  transition-timing-function: var(--v-intersect-easing);
}
.slideUp-init {
  transform: translate3d(0, var(--v-intersect-distance), 0);
}
.slideDown-init {
  transform: translate3d(0, var(--v-intersect-distance-invert), 0);
}
.slideRight-init {
  transform: translate3d(var(--v-intersect-distance-invert), 0, 0);
}
.slideLeft-init {
  transform: translate3d(var(--v-intersect-distance), 0, 0);
}

.slideUp,
.slideDown,
.slideRight,
.slideLeft {
  visibility: visible;
  transform: none;
}

/**
   * FLIPPING
   */

.flipLeft-init,
.flipRight-init,
.flipUp-init,
.flipDown-init {
  backface-visibility: hidden;
  transition-property: transform;
  transition-duration: var(--v-intersect-duration);
  transition-delay: var(--v-intersect-delay);
  transition-timing-function: var(--v-intersect-easing);
}
.flipLeft-init {
  transform: perspective(2500px) rotateY(-100deg);
}
.flipRight-init {
  transform: perspective(2500px) rotateY(100deg);
}
.flipUp-init {
  transform: perspective(2500px) rotateX(-100deg);
}
.flipDown-init {
  transform: perspective(2500px) rotateX(100deg);
}

.flipLeft {
  transform: perspective(2500px) rotateY(0);
}
.flipRight {
  transform: perspective(2500px) rotateY(0);
}
.flipUp {
  transform: perspective(2500px) rotateX(0);
}
.flipDown {
  transform: perspective(2500px) rotateX(0);
}

/*
   * FOCUS
   */

.focusIn-init,
.focusOut-init {
  transition-property: transform;
  transition-duration: var(--v-intersect-duration);
  transition-delay: var(--v-intersect-delay);
  transition-timing-function: var(--v-intersect-easing);
}
.focusIn-init {
  transform: scale(1);
}
.focusOut-init {
  transform: scale(1.05);
}

.focusIn {
  transform: scale(1.1);
}
.focusOut {
  transform: scale(1);
}
